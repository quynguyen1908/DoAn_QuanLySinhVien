/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view;
import dao.DangKiMonDAO;
import dao.LopTinChiDAO;
import model.MonHoc;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.DangKiMon;
import model.LopTinChi;
/**
 *
 * @author acer
 */
public class SinhVienDangKiMon extends javax.swing.JPanel {
    private DefaultTableModel tblModel1 = new DefaultTableModel();
    private DefaultTableModel tblModel2 = new DefaultTableModel();
    private String maSV = "";
    /**
     * Creates new form SinhVienDangKiMon
     */
     public SinhVienDangKiMon(String maSV) {
        initComponents();
        txtMaSV.setText(maSV.toUpperCase());
        txtMaSV.setEditable(false);
        initTableMH();
        fillTableMH();
        initTableDK();
        fillTableDK();
        TongCong();

    }
    private void initTableMH() {
        String[] header = new String[]{"Mã Môn Học", "Tên Môn Học", "Nhóm", "Số TC Lý Thuyết", "Số TC Thực hành"};
        tblModel1.setColumnIdentifiers(header);
        tblMonHoc.setModel(tblModel1);
    }
    
    private void initTableDK() {
        String[] header = new String[]{"Mã Môn Học", "Tên Môn Học", "Nhóm", "Số TC Lý Thuyết", "Số TC Thực hành"};
        tblModel2.setColumnIdentifiers(header);
        tblDangKi.setModel(tblModel2);
    }
    
     private void fillTableMH() {
        List<MonHoc> lstMonHoc = new ArrayList<>();
        try {
            DangKiMonDAO dao = new DangKiMonDAO();

            lstMonHoc = dao.getFillerMH();
        } catch (Exception e) {
            e.printStackTrace();
        }

        tblModel1.setRowCount(0);
        for (MonHoc monhoc : lstMonHoc) {
            tblModel1.addRow(new String[]{monhoc.getMaMon(), monhoc.getTenMon(),Integer.toString(monhoc.getNhom()), Integer.toString(monhoc.getSltclt()), Integer.toString(monhoc.getSltcth())});
        }
        tblModel1.fireTableDataChanged();
    }
  
    private void fillTableDK() {
        List<MonHoc> lstDangKi = new ArrayList<>();
        try {
            DangKiMonDAO dao = new DangKiMonDAO();

            lstDangKi = dao.getAllDSDK(txtMaSV.getText());
        } catch (Exception e) {
            e.printStackTrace();
        }
        
        tblModel2.setRowCount(0);
        for (MonHoc monhoc : lstDangKi) {
            tblModel2.addRow(new String[]{monhoc.getMaMon(), monhoc.getTenMon(),Integer.toString(monhoc.getNhom()), Integer.toString(monhoc.getSltclt()), Integer.toString(monhoc.getSltcth())});
        }
        tblModel2.fireTableDataChanged();
    }
    private void TongCong() {
        int tongMon = tblDangKi.getRowCount();
        int tongTC = 0;
        for (int i = 0; i < tongMon; i++) {
            tongTC += (Integer.parseInt(tblDangKi.getValueAt(i, 3).toString()) + Integer.parseInt(tblDangKi.getValueAt(i, 4).toString()));
        }
        jLabel3.setText("Danh sách môn học đã đăng kí: " + tongMon + " môn, " + tongTC + " tín chỉ");
    }
    
    public void setMaSV(String maSV)
    {
        this.maSV = maSV;
        txtMaSV.setText(maSV);
        txtMaSV.setEnabled(false);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtMaSV = new javax.swing.JTextField();
        txtMaMH = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblMonHoc = new javax.swing.JTable();
        btnThem = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDangKi = new javax.swing.JTable();
        btnXoa = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(204, 204, 255));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Nhập mã môn học:");

        txtMaSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaSVActionPerformed(evt);
            }
        });

        txtMaMH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaMHActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setText("Mã sinh viên: ");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtMaSV, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(75, 75, 75)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtMaMH, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(67, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtMaSV)
                            .addComponent(txtMaMH))))
                .addGap(4, 4, 4))
        );

        tblMonHoc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblMonHoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMonHocMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblMonHoc);

        btnThem.setText("Thêm");
        btnThem.setEnabled(false);
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Danh sách môn học đã đăng kí: 0 môn, 0 tín chỉ");

        tblDangKi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDangKi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDangKiMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblDangKi);

        btnXoa.setText("Xóa");
        btnXoa.setEnabled(false);
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(153, 153, 153)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnXoa)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnThem)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(250, 250, 250))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtMaSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaSVActionPerformed
        if (!txtMaSV.getText().equals("")) {
            fillTableDK();
        }
        TongCong();
    }//GEN-LAST:event_txtMaSVActionPerformed

    private void txtMaMHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaMHActionPerformed
        try {
            if (txtMaMH.getText().equals("")) {
                fillTableMH();
            } else {
                List<MonHoc> lstTimThay = new ArrayList<>();
                DangKiMonDAO dao = new DangKiMonDAO();
                lstTimThay = dao.getFillerMH();
                tblModel1.setRowCount(0);
                for (MonHoc monhoc : lstTimThay) {
                    if (txtMaMH.getText().equals(monhoc.getMaMon())) {
                        tblModel1.addRow(new String[]{monhoc.getMaMon(), monhoc.getTenMon(), Integer.toString(monhoc.getNhom()), Integer.toString(monhoc.getSltclt()), Integer.toString(monhoc.getSltcth())});
                    }
                }
                tblModel1.fireTableDataChanged();
            } 
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtMaMHActionPerformed

    private void tblMonHocMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMonHocMouseClicked
        int row = tblMonHoc.getSelectedRow();
        if (row >= 0) btnThem.setEnabled(true);
    }//GEN-LAST:event_tblMonHocMouseClicked

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        try {
            int row = tblMonHoc.getSelectedRow();
            String maSV = txtMaSV.getText();
            if (!maSV.equals("")) {
                DangKiMon dsdk = new DangKiMon();
                String maMon = tblMonHoc.getValueAt(row, 0).toString();
                int nhom = Integer.parseInt(tblMonHoc.getValueAt(row, 2).toString());
                DangKiMonDAO dao = new DangKiMonDAO();
                int maLopTC = dao.getLopTC(maMon, nhom);
                LopTinChi ltc = new LopTinChi();
                LopTinChiDAO ltcDAO = new LopTinChiDAO();
                ltc = ltcDAO.getLTCByID(maLopTC);
                int slsvMax = ltc.getSlsvMax();
                dsdk.setMaLopTC(maLopTC);
                dsdk.setMaSV(maSV);
                boolean f = false;
                f = dao.insert(dsdk, maMon, slsvMax);
                if (f == true) {
                    JOptionPane.showMessageDialog(this, "Thêm thành công 1 môn học");
                } else {
                    JOptionPane.showMessageDialog(this, "Thêm thất bại");
                }
                fillTableMH();
                fillTableDK();
                btnThem.setEnabled(false);
                TongCong();
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void tblDangKiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDangKiMouseClicked
        int row = tblDangKi.getSelectedRow();
        if (row >= 0) btnXoa.setEnabled(true);
    }//GEN-LAST:event_tblDangKiMouseClicked

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        try {
            int row = tblDangKi.getSelectedRow();
            String maSV = txtMaSV.getText();
            String maMon = tblDangKi.getValueAt(row, 0).toString();
            int nhom = Integer.parseInt(tblDangKi.getValueAt(row, 2).toString());
            DangKiMonDAO dao = new DangKiMonDAO();
            int maLopTC = dao.getLopTC(maMon, nhom);
            boolean f = false;
            f= dao.delete(maLopTC, maSV);
            if (f == true) {
                JOptionPane.showMessageDialog(this, "Xóa thành công 1 môn học");
            } else {
                JOptionPane.showMessageDialog(this, "Xóa thất bại");
            }
            fillTableMH();
            fillTableDK();
            btnXoa.setEnabled(false);
            TongCong();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnXoaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblDangKi;
    private javax.swing.JTable tblMonHoc;
    private javax.swing.JTextField txtMaMH;
    private javax.swing.JTextField txtMaSV;
    // End of variables declaration//GEN-END:variables
}
